# VERSIONS ==============================================================================

BACKEND_VERSION={{ versions_backend }}
SERVER_VERSION={{ versions_server }}
GAMEPARAMS_VERSION={{ versions_gameparams }}
DEPLOY_SCRIPTS_VERSION={{ versions_deploy_scripts }}

# cluster type --------------------------------------------------------------------------

CLUSTER_TYPE={{ prefix | upper }}
SERVER_TYPE=backend

# CONFIG ================================================================================

COMPOSE_PROJECT_NAME=r3_be
SERVER_CONFIG={{ server_config }}
LOGGING_APPENDER_FILE_FILTER="OFF"

# need to set Production on aws global playtests
METAGAME_CONFIG={{ metagame_config }}
#METAGAME_CONFIG=PlayTest
#METAGAME_CONFIG=supertest
#METAGAME_CONFIG=Production
#METAGAME_CONFIG=Development

# BE ONLY ==============================================================================

#COMPOSE_FILE=server-backend-core.yml:gameparams-server.yml:be-events-sender-service-host.yml:kafka.yml:redis.yml
COMPOSE_FILE={{ compose_file | join(':') }}
DB_COMPOSE_FILE={{ db_compose_file | join(':') }}
DB_PREFIX={{ db_prefix }}

KAFKA_PREFIX={{ kafka_prefix }}
KAFKA_URL={{ steelhunter_backend_core_ip }}:9092
KAFKA_NUM_PARTITIONS={{ kafka_num_partitions }}
EXTERNAL_HOSTNAME={{ backend_core_node }}
REPLY_PARTITIONS={{ kafka_reply_partitions }}
GROUP_PARTITIONS={{ kafka_group_partitions }}

EXTRA_CONFIGS={{ extra_configs }}

BACKYARD_DEPLOY=true
BACKYARD_CLIENT_NAME={{ backyard_client_name }}
BACKYARD_CLIENT_ID={{ backyard_client_id }}
BACKYARD_CLIENT_SECRET={{ backyard_client_secret }}
BACKYARD_REDIRECT_URL={{ backyard_redirect_url }}

XMPP_TOKEN={{ xmpp_token }}

REVENUESHARE_APPADDRESS={{ revenueshare_appaddress }}
AFFISE_API_KEY={{ lookup('hashi_vault', 'secret=secret/responsible_r3/AWS_affise_API_key:union') }}

DS_COUNT=1

# number of attempts to find a dedic
START_GAME_ATTEMPTS_NUMBER=1000

SERVER_ADDRESS=
SERVER_ALIAS="{{ server_alias }}"

# JAVA SETTINGS ========================================================================

#AVAILABLE_PROCESSORS=8 #need for k8s
HEAP_LIMIT=1024M
HEAP_LIMITx2=2048M
HEAP_LIMITx4=4096M

# =======================================================================================

AWS_S3=s3://zip-builds
AWS_ECR_BACKEND={{ docker_mirror }}

# CONNECTIONS ===========================================================================

BACKYARDGATEWAY_HOST=localhost

CONSUL_URL=localhost:8500
BIND_NAME={{ primary_network_interface_name }}

JAEGER_URL={{ steelhunter_jaeger_url }}

# gameparams server
UPARAMS_URL=

POSTGRES_HOST={{ postgres_host }}
POSTGRES_PORT={{ postgres_port }}
POSTGRES_URL={{ postgres_url }}
POSTGRES_DB=r3
POSTGRES_USER=r3
POSTGRES_PASSWORD={{ postgres_pass }}
POSTGRES_MAX_CONNECTIONS=1000
POSTGRES_SHARED_BUFFER=256MB
POSTGRES_IO_CONCURRENCY=400
POSTGRES_REPLICATOR_USERNAME={{ postgres_replica_user }}
POSTGRES_REPLICATOR_PASSWORD={{ postgres_replica_pass }}

CLICKHOUSE_PORT=18123
CLICKHOUSE_URL=localhost:18123
CLICKHOUSE_USER=ch
CLICKHOUSE_PASSWORD=ch-passwd

CACHE_HOST={{ steelhunter_backend_private_ip }}

INVENTORY_HOST={{ steelhunter_backend_private_ip }}
MATCHMACKER_URL=localhost:30051
MATCHMACKERLOBBY_HOST=localhost
LEADERBOARD_URL={{ steelhunter_backend_private_ip }}:6670
DEDICATED_SERVER_GATEWAY_URL={{ steelhunter_backend_private_ip }}:6691

GSM_IP=

WGN_API_KEY={{ wgn_api_key }}
WGN_API_URL={{ wgn_api_url }}

STEAM_APPLICATION_ID={{ steam_application_id }}
STEAM_PUBLISHER_API_KEY={{ lookup('hashi_vault', 'secret=secret/responsible_r3/AWS_STEAM_PUBLISHER_API_KEY:backend_achievement') }}

ELK_HOST={{ steelhunter_elk_ip }}

# download shared images
SHARED_IMAGES=false
# rewrite db yml files
REWRITE_DB=false

# CLIENT GATEWAY =======================================================================

PREMIUM_SHOP={{ premium_shop_url}}
PATCH_NOTES_URL=https://promo.steelhunters.com/wgc-client/en/changelog/
DISCORD_URL=https://discord.gg/steelhunters
URL_WHITE_LIST=""

# BACKWARD COMPATIBILITY ================================================================

BACKEND_ONLY_DEPLOY=true
