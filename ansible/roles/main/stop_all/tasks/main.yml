---
- name: "RSS stop"
  when:
    - server_type in ["be"]
    - "'server-backend-high.yml' in compose_file"
  ansible.builtin.shell:
  args:
    cmd: ./launcher-realms.sh down
    chdir: /home/ec2-user/r3
  tags:
    - stop-all

- name: "Matchmaker stop"
  when:
    - server_type in ["be"]
    - "'server-backend-high.yml' in compose_file"
  ansible.builtin.shell:
  args:
    cmd: ./launcher-deploy.sh down matchmakerlobby
    chdir: /home/ec2-user/r3
  tags:
    - stop-all

- name: "Stop consul"
  when: server_type in ["gsm"]
  ansible.builtin.shell:
  args:
    cmd: ./launcher-consul.sh down
    chdir: /home/ec2-user/r3
  tags:
    - stop-all

- name: Copy script that check number of ongoing battles 
  template:
    src: num_of_battles.sh.j2
    dest: /tmp/num_of_battles.sh
    mode: '0755'
  delegate_to: 127.0.0.1
  run_once: true
  tags:
    - stop-all

- name: Check the number of ongoin battles
  ansible.builtin.command: /tmp/num_of_battles.sh
  register: number_of_battles
  until: number_of_battles.rc == 0
  retries: "{{ retries | int }}"
  delay: "{{ interval | int }}"
  delegate_to: 127.0.0.1
  run_once: true
  failed_when: false  # Don't fail the task, let the until loop handle it
  tags:
    - stop-all

- name: Display number of battles check output (for debugging)
  debug:
    var: number_of_battles.stdout_lines
  run_once: true
  tags:
    - stop-all

- name: Fail if we still have ongoing battles after all retries
  ansible.builtin.fail:
    msg: "We still have ongoing battles after {{ retries }} retries."
  when:
    - server_type in ["gsm"]
    - number_of_battles.rc != 0
  run_once: true
  tags:
    - stop-all

- name: Report that all battles are finished
  ansible.builtin.debug:
    msg: "All battles are finished. Stopping GSM"
  when: number_of_battles.rc == 0
  run_once: true
  tags:
    - stop-all

# GSM & BE server stop part

- name: "GSM servers stop"
  when:
    - server_type in ["gsm"]
    - number_of_battles.rc == 0
  ansible.builtin.shell:
  args:
    cmd: ./launcher-deploy.sh down
    chdir: /home/ec2-user/r3
  tags:
    - stop-all

- name: "Pause 10 seconds. Giving players some time after last battle."
  ansible.builtin.pause:
    seconds: 10
  tags:
    - stop-all

- name: "BE servers stop"
  when:
    - server_type in ["be"]
    - number_of_battles.rc == 0
  ansible.builtin.shell:
  args:
    cmd: ./launcher-deploy.sh down
    chdir: /home/ec2-user/r3
  tags:
    - stop-all

- name: "Backend databases stop"
  when:
    - server_type in ["be"]
    - db_compose_file is defined
    - db_compose_file | length > 0
    - number_of_battles.rc == 0
  ansible.builtin.shell:
  args:
    cmd: ./dbs-launcher.sh down
    chdir: /home/ec2-user/r3
  tags:
    - stop-all
